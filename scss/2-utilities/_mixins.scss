// Map Colors
@mixin bg-colors($map){
  @each $theme, $color in $map {
    &--#{$theme} {
      background-color: $color;
    }
  }
}

@mixin bg-colors2($map){
  @each $theme, $color in $map {
    &__#{$theme} {
      background-color: $color;
    }
  }
}




// grid rows
@mixin bp-flex{
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  @content;
}

// @mixin bp-grid{
//   display: grid;
//   grid-template-columns:
// }

// @mixin grid-layout($grid){
//   @each $theme, $value in $grid {
//     &__#{$theme} {
//       display:grid;
//       grid-template-columns: $value;
//     }
//   }
// }


@mixin grid-layout{
  @for $i from 1 through $g-col-count {
    &__col--#{$i}{
      text-align: center;
      @if $i == 7{
        grid-template-columns: 2/3;
      } @else if $i == 8{
        grid-template-columns: 2/3;
      }
      @else  {
        grid-template-columns: auto;
      }
    }
  }
}

@mixin g-style{
  @for $i from 1 through $g-col-count {
    &__col--#{$i}{
      @extend %grid-style;
      }
    }
}

@mixin g-grow{
  @for $i from 1 through $g-col-count {
    &__col--#{$i}{
      margin-left: em(5px);
      margin-right: em(5px);
      text-align: center;
      @if $i == 7{
        flex-grow: 2;
      } @else if $i == 8{
        flex-grow: 2;
      }
      @else  {
        flex-grow: 1;
      }
    }
  }
}




// @mixin g-grow{
//   @each $theme, $value in $grid-number{
//     &__#{$theme} {
//       @include grid-extend;
//     }
//   }
// }
//



@mixin mq($break){
  @if $break == "small" {
    @media (min-width: $break-s) and (max-width: $brkpoint-md){
      @content;
    }
  }
  @else if $break == "medium" {
    @media (min-width: $break-m +1){
      @content;
    }
  }
  @else if $break == "large" {
    @media (min-width: $break-l){
      @content;
    }
  }
  @else {
    @error "no value retrieved for `#{$break}"
  }
}

//BEM Selector

@mixin e($element) {
  &__#{$element} {
    @content;
  }
}

@mixin m($modifier) {
  &--#{$modifier} {
    @content;
  }
}

// image replacement

@mixin img-replace($img, $w, $h, $disp: block) {
  background-image: url('#{$path--rel}/#{$img}');

}

// adjacnet sibling margins

@mixin doubly($margin: 1em) {
  & + & {
    margin-left: $margin;
    @content;
  }
}

// Flexbox
